name: CMake on Arch Linux

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - c_compiler: gcc
            cxx_compiler: g++

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache pacman packages
        id: cache-pacman
        uses: actions/cache@v3
        with:
          path: /var/cache/pacman/pkg
          key: ${{ runner.os }}-pacman-${{ hashFiles('**/PKGBUILD') }}
          restore-keys: |
            ${{ runner.os }}-pacman-

      - name: Run build inside Arch Linux container
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace \
            archlinux:latest \
            bash -c "
              set -euxo pipefail

              # Set up pacman
              pacman-key --init
              pacman-key --populate archlinux
              pacman -Syu --noconfirm

              # Install dependencies
              pacman -S --noconfirm base-devel cmake ninja git zlib sdbus-cpp qt6 qt6-webengine qt6-wayland layer-shell-qt

              # Install yay (AUR helper)
              cd /tmp
              git clone https://aur.archlinux.org/yay.git
              cd yay
              makepkg -si --noconfirm

              # Install AUR package
              yay -S --noconfirm uwebsockets

              # Build project
              ldd --version
              cmake -B build -G Ninja \
                -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} \
                -DCMAKE_CXX_COMPILER=${{ matrix.cxx_compiler }} \
                -DCMAKE_BUILD_TYPE=Release \
                -S .
              cmake --build build
              ctest --test-dir build
            "
