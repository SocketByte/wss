name: CMake on Arch Linux

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - c_compiler: gcc
            cxx_compiler: g++

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache pacman packages
        id: cache-pacman
        uses: actions/cache@v3
        with:
          path: /var/cache/pacman/pkg
          key: ${{ runner.os }}-pacman-${{ hashFiles('**/PKGBUILD') }}
          restore-keys: |
            ${{ runner.os }}-pacman-

      - name: Run build inside Arch Linux container
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace \
            archlinux:latest \
            bash -c "
              set -euxo pipefail

              # Setup pacman
              pacman-key --init
              pacman-key --populate archlinux
              pacman -Syu --noconfirm

              # Install base-devel, sudo, and other dependencies
              pacman -S --noconfirm base-devel sudo git cmake ninja json-c zlib sdbus-cpp qt6 qt6-wayland qt6-webengine layer-shell-qt

              # Create a non-root user
              useradd -m builduser
              echo 'builduser ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers

              # Switch to non-root user and install yay + uwebsockets
              su builduser <<EOF
              set -euxo pipefail
              cd ~
              git clone https://aur.archlinux.org/yay.git
              cd yay
              makepkg -si --noconfirm
              yay -S --noconfirm uwebsockets
              EOF

              # Back to root, build the project
              ldd --version
              cmake -B build -G Ninja \
                -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} \
                -DCMAKE_CXX_COMPILER=${{ matrix.cxx_compiler }} \
                -DCMAKE_BUILD_TYPE=Release \
                -S .
              cmake --build build
              ctest --test-dir build
            "
